{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyNiQRU1cQ/17D1U6KPn2b3X"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":16,"metadata":{"id":"_Cv8-T7TF9kv","executionInfo":{"status":"ok","timestamp":1750098227789,"user_tz":240,"elapsed":3,"user":{"displayName":"Ruchi Patil","userId":"03952295460083736307"}}},"outputs":[],"source":["# IMPORTS\n","import os\n","import pandas as pd\n","import json\n","from tqdm import tqdm\n","from google.colab import drive"]},{"cell_type":"code","source":["# mount gdrive\n","!fusermount -u /content/drive\n","!rm -rf /content/drive\n","\n","drive.mount('/content/drive')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"2Hr60rnTGDom","executionInfo":{"status":"ok","timestamp":1750098229489,"user_tz":240,"elapsed":1698,"user":{"displayName":"Ruchi Patil","userId":"03952295460083736307"}},"outputId":"75b8c597-5f05-45bf-bccc-485cb52da2c3"},"execution_count":17,"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}]},{"cell_type":"code","source":["folder = \"/content/drive/MyDrive/music_anthro_M2\"\n","MB_folder = os.path.join(folder, \"data/Tracks_data/Musicbrainz_no_lyrics\")\n","AB_folder = os.path.join(folder, \"acousticbrainz/slimABcsvs\")\n","years = [\"2007\", \"2008\", \"2009\", \"2020\", \"2023\", \"2024\", \"2025\"]"],"metadata":{"id":"xnqIEk7hHt4A","executionInfo":{"status":"ok","timestamp":1750098229502,"user_tz":240,"elapsed":11,"user":{"displayName":"Ruchi Patil","userId":"03952295460083736307"}}},"execution_count":18,"outputs":[]},{"cell_type":"code","source":["# load musicbrianz metadata by mbid\n","\n","\n","def load_musicbrianz_metadata():\n","\n","  year_map = {}\n","  for year in years:\n","    f = os.path.join(MB_folder, year)\n","    if not os.path.exists(f):\n","      print(f\"folder not found: {f}\")\n","      continue\n","    for fname in tqdm(os.listdir(f), desc=f\"Reading {year}\"):\n","      if fname.endswith(\".csv\"):\n","        fpath = os.path.join(f, fname)\n","        try:\n","          df = pd.read_csv(fpath, usecols=[\"MBID\"], dtype=str)\n","          for MBID in df[\"MBID\"].dropna():\n","            year_map[MBID] = year\n","        except Exception as e:\n","          print(f\"Error reading {fpath}: {e}\")\n","  return year_map"],"metadata":{"id":"5r6MBfcfGDtI","executionInfo":{"status":"ok","timestamp":1750098229520,"user_tz":240,"elapsed":11,"user":{"displayName":"Ruchi Patil","userId":"03952295460083736307"}}},"execution_count":19,"outputs":[]},{"cell_type":"code","source":["# filter acousticbrianz CSV by year via MBID\n","def filter_acousticbrianz_by_year(outpath, year_map):\n","  os.makedirs(outpath, exist_ok=True)\n","\n","  for file in tqdm(os.listdir(AB_folder), desc=\"Filtering AcousticBRAINZ files\"):\n","    if file.endswith(\".csv\"):\n","      ab_path = os.path.join(AB_folder, file)\n","      try:\n","        df = pd.read_csv(ab_path, dtype=str)\n","        if \"track_id\" in df.columns:\n","          # in the track_id (MBID) of acousticbrainz extracts, there is always an extra '-#' in front\n","          # the meddles with the api call to the musicbrainz, so keep the MBID except for the last dash number\n","          df[\"mbid_clean\"] = df[\"track_id\"].str.extract(r\"^([a-f0-9\\-]{36})\")\n","          df_fltrd = df[df[\"mbid_clean\"].isin(year_map.keys())]\n","          # if we have made a new df, then save it ->\n","          if not df_fltrd.empty:\n","            df_fltrd.to_csv(os.path.join(outpath, file), index=False)\n","            print(f\"{file}: kept {len(df_fltrd)} rows\")\n","      except Exception as e:\n","        print(f\"Error reading {ab_path}: {e}\")"],"metadata":{"id":"LaXzChuTGDzP","executionInfo":{"status":"ok","timestamp":1750098229549,"user_tz":240,"elapsed":26,"user":{"displayName":"Ruchi Patil","userId":"03952295460083736307"}}},"execution_count":20,"outputs":[]},{"cell_type":"code","source":["# runnin it\n","\n","mbid_map = load_musicbrianz_metadata()\n","filter_acousticbrianz_by_year(os.path.join(folder, \"Year_fltrd_AcousticBrainz\"), mbid_map)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"xLrGKxE1GD0P","outputId":"6ecb3975-b62d-4b83-9098-0a0ecfb391e1"},"execution_count":null,"outputs":[{"metadata":{"tags":null},"name":"stderr","output_type":"stream","text":["Reading 2007: 100%|██████████| 51/51 [00:03<00:00, 13.09it/s]\n","Reading 2008: 100%|██████████| 47/47 [00:02<00:00, 18.33it/s]\n","Reading 2009: 100%|██████████| 46/46 [00:02<00:00, 18.67it/s]\n","Reading 2020: 100%|██████████| 41/41 [00:01<00:00, 31.68it/s]\n"]},{"metadata":{"tags":null},"name":"stdout","output_type":"stream","text":["folder not found: /content/drive/MyDrive/music_anthro_M2/data/Tracks_data/Musicbrainz_no_lyrics/2023\n","folder not found: /content/drive/MyDrive/music_anthro_M2/data/Tracks_data/Musicbrainz_no_lyrics/2024\n","folder not found: /content/drive/MyDrive/music_anthro_M2/data/Tracks_data/Musicbrainz_no_lyrics/2025\n"]},{"output_type":"stream","name":"stderr","text":["Filtering AcousticBRAINZ files:  52%|█████▏    | 104/200 [10:54<09:57,  6.22s/it]"]}]},{"cell_type":"code","source":[],"metadata":{"id":"XCPfe-rLGD1Z"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"YYeo_bmeGD4u"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"1Svq0gAzGD61"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"_nMthwBcGD99"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"YNhudrLlGEAd"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"bVsrDxEFGEEi"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"ArAzyEOgGEGq"},"execution_count":null,"outputs":[]}]}